@model MVCWEB.Models.EvaluationAchatPublicViewModel

@{
    Layout = "~/Views/Shared/_Layout_Qualite.cshtml";
}


@section extract {
    <li> <a onclick="tablesToExcel(['ArchiveEmp'], ['AchatPublicHistorique'], 'AchatPublicHistoriqueEvaluations.xls', 'Excel')"> <span class="glyphicon glyphicon-export"></span>Télécharger Excel</a></li>
}
@section test{

    <br />
    <div class="row">

        <div class="col-xs-4">

            @Html.DropDownList("test", Model.employees, "---Select Agent Qualité----", htmlAttributes: new { @class = "bootstrap-select", @id = "test", @name = "test", style = "data-width: 360px;", selected = "selected" })
            @Html.ValidationMessageFor(model => model.employees, "", new { @class = "text-danger" })
            @*@Html.DropDownList("test", new SelectList(string.Empty, "Value", "Text"), new { style = "height: 35px;", @class = "form-control" })*@
        </div>
     
        <div class="col-xs-4">

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="icon-calendar22"></i></span>
                    <input type="text" class="form-control daterange-basic" name="datetimes" id="datetimes" value="01/01/2020 - 01/31/2020">
                </div>
            </div>
        </div>
        <div class="col-1">
            <button id="Save" type="submit" class="btn bg-teal-400" data-title="Chercher Enregistrement" value="Chercher Enregistrement" data-toggle="modal">ReCherche <i class="icon-play3 position-right"></i></button>
        </div>
    </div>
    <br />
    <br />
    <div id="view"></div>

    <script>
        var debut = '01/01/2020';
        var fin = '31/01/2020';
$(function() {
    $('#datetimes').daterangepicker({

        opens: 'left',
        format: 'DD/MM/YYYY',
        locale: {

            "daysOfWeek": [
      "Dim",
      "Lun",
      "Mar",
      "Mer",
      "Jeu",
      "Ven",
      "Sam"
            ],
            "monthNames": [
                "Jan",
                "Fev",
                "Mar",
                "Avr",
                "Mai",
                "Ju",
                "Jui",
                "Aou",
                "Sep",
                "Oct",
                "Nov",
                "December"
            ],
        },
        lan: 'fr',


    },
     function (start, end, label) {
         debut = start.format('DD/MM/YYYY');
         fin = end.format('DD/MM/YYYY');
     }
    );
});
    </script>
    <script type="text/javascript">

        $(document).ready(function () {
            $(document).on("change", "#test", function () {
                $.ajax({
                    url: '/EvaluationAchatPublic/GetAchatPublicArchiveEvaluationsQualite',
                    type: 'GET',
                    datatype: 'json',
                    data: {
                        username: $("#test").val()
                    },
                    async: true,
                    success: function (data) {
                        $('#view').html(data);
                        $('#ArchiveEmp').show();
                        $('#errorFile2').modal('show');
                    },
                });
            })
        })
    </script>

    <script>
        $('#datePicker')
               .daterangepicker({
                   singleDatePicker: true,
                   locale: {
                       setDate: new Date(),
                       format: 'DD/MM/YYYY',
                       "daysOfWeek": [
            "Dim",
            "Lun",
            "Mar",
            "Mer",
            "Jeu",
            "Ven",
            "Sam"
                       ],
                       "monthNames": [
                           "Jan",
                           "Fev",
                           "Mar",
                           "Avr",
                           "Mai",
                           "Ju",
                           "Jui",
                           "Aou",
                           "Sep",
                           "Oct",
                           "Nov",
                           "December"
                       ],
                   },
                   lan: 'fr',
                   autoclose: true,
               })
               .on('changeDate', function (e) {
                   $('#datepicker').hide();
               });

    </script>
    <script type="text/javascript">

        $(document).ready(function () {
            $(document).on("click", "#Save", function () {

                $.ajax({
                    url: '/EvaluationAchatPublic/GetArchiveAchatPublicEvaluationsByDate',
                    type: 'GET',
                    datatype: 'json',
                    data: {
                        username: $("#test").val(),
                        dateDebut: debut,
                        dateFin:fin,
                        //date: $("#datePicker").val()
                    },
                    async: true,
                    success: function (data) {
                        $('#view').html(data);
                        $('#ArchiveEmp').show();
                        $('#errorFile2').modal('show');
                    },
                });
            })
        })
    </script>

    <script>

        var tablesToExcel = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
            , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
              + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
              + '<Styles>'
              + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
              + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
              + '</Styles>'
              + '{worksheets}</Workbook>'
            , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
            , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
            return function (tables, wsnames, wbname, appname) {
                var ctx = "";
                var workbookXML = "";
                var worksheetsXML = "";
                var rowsXML = "";

                for (var i = 0; i < tables.length; i++) {
                    if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                    for (var j = 0; j < tables[i].rows.length; j++) {
                        rowsXML += '<Row>'
                        for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                            var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                            var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                            var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                            dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML;
                            var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                            dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                            ctx = {
                                attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                   , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                   , data: (dataFormula) ? '' : dataValue
                                   , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                            };
                            rowsXML += format(tmplCellXML, ctx);
                        }
                        rowsXML += '</Row>'
                    }
                    ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                    worksheetsXML += format(tmplWorksheetXML, ctx);
                    rowsXML = "";
                }

                ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
                workbookXML = format(tmplWorkbookXML, ctx);

                console.log(workbookXML);

                var link = document.createElement("A");
                link.href = uri + base64(workbookXML);
                link.download = wbname || 'Workbook.xls';
                link.target = '_blank';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        })();
    </script>
}
@section testProfile{

    <a class="dropdown-toggle" data-toggle="dropdown">
        <img src=@Model.Url alt="">
        <span>@Model.userName</span>
        <i class="caret"></i>
    </a>
    <ul class="dropdown-menu dropdown-menu-right">

        <li><a href="@Url.Action("logout", "Authentification")"><i class="icon-switch2"></i> Logout</a></li>
    </ul>
}
@section sidebarProfile{

    <a href="#" class="media-left"><img src=@Model.Url class="img-circle img-sm" alt=""></a>
    <div class="media-body">
        <span class="media-heading text-semibold">@Model.userName</span>
        <div class="text-size-mini text-muted">
            <i class="icon-user text-size-small"></i> &nbsp;@Model.pseudoNameEmp
        </div>
    </div>
    <div class="media-right media-middle">

    </div>
}
@section pagetitle{
    <h4> <span class="text-semibold">Espace Qualité</span> -  Historique d'évaluations</h4>
}
@section pagetitlebody{
    <li><a href="#"><i class="icon-home2 position-left"></i> Historique d'évaluations</a></li>
    <li class="active">Par Agent Qualité</li>
    <li class="active">Achat Public evaluations</li>
}